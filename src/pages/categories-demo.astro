---
import { getAllCategories, getNoteStatistics, groupNotesByCategory } from '../utils/categories';
import { getCollection } from 'astro:content';
import CategoryDisplay from '../components/CategoryDisplay.astro';

// Get all notes
const allNotes = await getCollection('notes');

// Get category statistics
const stats = getNoteStatistics(allNotes);

// Group notes by category
const notesByCategory = groupNotesByCategory(allNotes);

// Get all available categories
const categories = getAllCategories();
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Category System Demo - Field Notes</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body>
    <div class="container">
      <header>
        <h1>Category System Demo</h1>
        <p>This page demonstrates how the category system works across different scenarios.</p>
      </header>

      <section class="stats">
        <h2>Category Statistics</h2>
        <div class="stats-grid">
          <div class="stat-card">
            <h3>Total Notes</h3>
            <div class="stat-number">{stats.totalNotes}</div>
          </div>
          <div class="stat-card">
            <h3>Categories Used</h3>
            <div class="stat-number">{Object.keys(stats.categoryCounts).length}</div>
          </div>
          <div class="stat-card">
            <h3>Themes Used</h3>
            <div class="stat-number">{Object.keys(stats.themeCounts).length}</div>
          </div>
        </div>
      </section>

      <section class="categories-overview">
        <h2>All Categories</h2>
        <div class="categories-grid">
          {categories.map(category => (
            <div class="category-card" style={`border-left: 4px solid ${category.color}`}>
              <div class="category-header">
                <span class="category-icon" style={`color: ${category.color}`}>
                  {category.icon}
                </span>
                <h3 style={`color: ${category.color}`}>{category.displayName}</h3>
              </div>
              <p class="category-description">{category.description}</p>
              <div class="category-stats">
                <span class="note-count">{stats.categoryCounts[category.slug] || 0} notes</span>
                <span class="theme-count">{category.themes.length} themes</span>
              </div>
              <div class="themes-preview">
                {category.themes.slice(0, 3).map(theme => (
                  <span class="theme-tag" style={`background-color: ${category.color}20; color: ${category.color}`}>
                    {theme}
                  </span>
                ))}
                {category.themes.length > 3 && (
                  <span class="theme-more">+{category.themes.length - 3} more</span>
                )}
              </div>
            </div>
          ))}
        </div>
      </section>

      <section class="notes-by-category">
        <h2>Notes by Category</h2>
        {Object.entries(notesByCategory).map(([categorySlug, notes]) => {
          if (notes.length === 0) return null;
          const category = categories.find(c => c.slug === categorySlug);
          return (
            <div class="category-section">
              <div class="category-header">
                <CategoryDisplay 
                  category={categorySlug} 
                  showIcon={true}
                  showDescription={false}
                />
                <span class="note-count">{notes.length} notes</span>
              </div>
              <div class="notes-grid">
                {notes.map(note => (
                  <div class="note-card">
                    <h4>{note.data.title}</h4>
                    <p class="note-description">{note.data.description}</p>
                    <div class="note-meta">
                      <span class="note-date">{note.data.pubDate.toLocaleDateString()}</span>
                      {note.data.themes && note.data.themes.length > 0 && (
                        <div class="note-themes">
                          {note.data.themes.map(theme => (
                            <span class="theme-tag small" style={`background-color: ${category?.color}20; color: ${category?.color}`}>
                              {theme}
                            </span>
                          ))}
                        </div>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          );
        })}
      </section>

      <section class="theme-breakdown">
        <h2>Most Used Themes</h2>
        <div class="themes-list">
          {Object.entries(stats.themeCounts)
            .sort(([,a], [,b]) => b - a)
            .slice(0, 10)
            .map(([theme, count]) => (
              <div class="theme-item">
                <span class="theme-name">{theme}</span>
                <span class="theme-count">{count} notes</span>
              </div>
            ))}
        </div>
      </section>
    </div>

    <style>
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        font-family: system-ui, sans-serif;
        line-height: 1.6;
      }

      header {
        text-align: center;
        margin-bottom: 3rem;
      }

      header h1 {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        color: #1f2937;
      }

      header p {
        font-size: 1.2rem;
        color: #6b7280;
      }

      .stats {
        margin-bottom: 3rem;
      }

      .stats h2 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        color: #1f2937;
      }

      .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
      }

      .stat-card {
        background: #f9fafb;
        padding: 1.5rem;
        border-radius: 0.5rem;
        border: 1px solid #e5e7eb;
        text-align: center;
      }

      .stat-card h3 {
        font-size: 1rem;
        color: #6b7280;
        margin-bottom: 0.5rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
      }

      .stat-number {
        font-size: 2.5rem;
        font-weight: bold;
        color: #1f2937;
      }

      .categories-overview {
        margin-bottom: 3rem;
      }

      .categories-overview h2 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        color: #1f2937;
      }

      .categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
      }

      .category-card {
        background: #f9fafb;
        padding: 1.5rem;
        border-radius: 0.5rem;
        border: 1px solid #e5e7eb;
      }

      .category-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1rem;
      }

      .category-icon {
        font-size: 1.5rem;
      }

      .category-header h3 {
        margin: 0;
        font-size: 1.25rem;
      }

      .category-description {
        color: #6b7280;
        margin-bottom: 1rem;
        font-size: 0.9rem;
      }

      .category-stats {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
        font-size: 0.8rem;
        color: #6b7280;
      }

      .themes-preview {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
      }

      .theme-tag {
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        font-size: 0.75rem;
        font-weight: 500;
      }

      .theme-more {
        font-size: 0.75rem;
        color: #6b7280;
        font-style: italic;
      }

      .notes-by-category {
        margin-bottom: 3rem;
      }

      .notes-by-category h2 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        color: #1f2937;
      }

      .category-section {
        margin-bottom: 2rem;
      }

      .category-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e5e7eb;
      }

      .note-count {
        font-size: 0.9rem;
        color: #6b7280;
        font-weight: 500;
      }

      .notes-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
      }

      .note-card {
        background: #f9fafb;
        padding: 1rem;
        border-radius: 0.5rem;
        border: 1px solid #e5e7eb;
      }

      .note-card h4 {
        margin: 0 0 0.5rem 0;
        color: #1f2937;
        font-size: 1.1rem;
      }

      .note-description {
        color: #6b7280;
        font-size: 0.9rem;
        margin-bottom: 0.75rem;
      }

      .note-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.8rem;
        color: #6b7280;
      }

      .note-themes {
        display: flex;
        gap: 0.25rem;
        flex-wrap: wrap;
      }

      .theme-tag.small {
        padding: 0.125rem 0.375rem;
        font-size: 0.7rem;
      }

      .theme-breakdown h2 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        color: #1f2937;
      }

      .themes-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 0.75rem;
      }

      .theme-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem;
        background: #f9fafb;
        border-radius: 0.25rem;
        border: 1px solid #e5e7eb;
      }

      .theme-name {
        font-weight: 500;
        color: #1f2937;
      }

      .theme-count {
        font-size: 0.8rem;
        color: #6b7280;
        background: #e5e7eb;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
      }

      @media (prefers-color-scheme: dark) {
        .container {
          background: #111827;
          color: #f9fafb;
        }

        header h1, .stats h2, .categories-overview h2, .notes-by-category h2, .theme-breakdown h2 {
          color: #f9fafb;
        }

        .stat-card, .category-card, .note-card, .theme-item {
          background: #1f2937;
          border-color: #374151;
        }

        .category-description, .note-description, .note-count, .theme-count {
          color: #9ca3af;
        }
      }
    </style>
  </body>
</html>
