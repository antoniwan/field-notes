---
import BaseLayout from './BaseLayout.astro';
import { Image } from 'astro:assets';
import FormattedDate from '../components/FormattedDate.astro';
import ArticleFooter from '../components/ArticleFooter.astro';
import Prose from '../components/Prose.astro';
import type { ImageMetadata } from 'astro';

interface Props {
	title: string;
	description: string;
	pubDate: Date;
	heroImage?: ImageMetadata;
	image?: ImageMetadata;
	canonical?: string;
	noindex?: boolean;
}

const { 
	title, 
	description, 
	pubDate, 
	heroImage, 
	image = heroImage,
	canonical,
	noindex = false 
} = Astro.props;
---

<BaseLayout 
	title={title} 
	description={description} 
	image={image}
	canonical={canonical}
	noindex={noindex}
>
	<!-- Hero Section -->
	<section class="hero-section">
		<div class="container-content">
			{heroImage && (
				<div class="hero-image">
					<Image 
						width={720} 
						height={360} 
						src={heroImage} 
						alt={title}
						class="hero-img"
					/>
				</div>
			)}
			<header class="hero-header">
				<h1 class="hero-title">{title}</h1>
				{description && (
					<p class="hero-description">{description}</p>
				)}
				<div class="hero-meta">
					<time datetime={pubDate.toISOString()}>
						<FormattedDate date={pubDate} />
					</time>
				</div>
			</header>
		</div>
	</section>
	
	<!-- Main Content -->
	<main class="main-content">
		<article class="content-article">
			<Prose size="lg">
				<slot />
			</Prose>
		</article>
	</main>
	
	<!-- Footer -->
	<ArticleFooter />
</BaseLayout>

<style>
	/* Hero Section */
	.hero-section {
		background: var(--color-background);
		padding: var(--space-24) 0 var(--space-20);
		text-align: center;
		border-bottom: 1px solid var(--color-border-light);
	}

	/* Hero content is now handled by container-content class */

	.hero-image {
		margin-bottom: var(--space-12);
		overflow: hidden;
		box-shadow: var(--shadow-lg);
	}

	.hero-img {
		width: 100%;
		height: auto;
		display: block;
		margin: 0;
	}

	.hero-header {
		text-align: center;
	}

	.hero-title {
		font-family: var(--font-serif);
		font-size: var(--text-5xl);
		font-weight: 700;
		line-height: var(--leading-tight);
		color: var(--color-primary);
		margin: 0 0 var(--space-6) 0;
		letter-spacing: -0.02em;
	}

	.hero-description {
		font-size: var(--text-xl);
		line-height: var(--leading-relaxed);
		color: var(--color-secondary);
		margin: 0 0 var(--space-8) 0;
		font-style: italic;
		max-width: 600px;
		margin-left: auto;
		margin-right: auto;
	}

	.hero-meta {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.hero-meta time {
		font-size: var(--text-sm);
		font-weight: 500;
		color: var(--color-muted);
		text-transform: uppercase;
		letter-spacing: 0.05em;
	}

	/* Main Content */
	.main-content {
		width: 100%;
		padding: var(--space-20) 0;
	}

	.content-article {
		width: 100%;
	}


	/* Responsive Design */
	@media (max-width: 1024px) {
		.hero-section {
			padding: var(--space-20) 0 var(--space-16);
		}

		.hero-title {
			font-size: var(--text-4xl);
		}

		.main-content {
			padding: var(--space-16) 0;
		}
	}

	@media (max-width: 768px) {
		.hero-section {
			padding: var(--space-16) 0 var(--space-12);
		}

		/* Hero content padding is now handled by container-content responsive styles */

		.hero-title {
			font-size: var(--text-3xl);
			margin-bottom: var(--space-4);
		}

		.hero-description {
			font-size: var(--text-lg);
			margin-bottom: var(--space-6);
		}

		.main-content {
			padding: var(--space-12) 0;
		}

	}

	@media (max-width: 480px) {
		.hero-section {
			padding: var(--space-12) 0 var(--space-8);
		}

		.hero-title {
			font-size: var(--text-2xl);
			margin-bottom: var(--space-3);
		}

		.hero-description {
			font-size: var(--text-base);
			margin-bottom: var(--space-4);
		}

		.main-content {
			padding: var(--space-8) 0;
		}

	}

	/* Dark mode support */
	[data-theme="dark"] .hero-section {
		background: var(--color-background);
		border-bottom-color: var(--color-border);
	}

	[data-theme="dark"] .hero-title {
		color: var(--color-primary);
	}

	[data-theme="dark"] .hero-description {
		color: var(--color-secondary);
	}

	[data-theme="dark"] .hero-meta time {
		color: var(--color-muted);
	}


	/* Prose content styling is now handled by the Prose component */

</style>
